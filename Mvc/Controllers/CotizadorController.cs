/* ------------------------------------------------------------------------------
<auto-generated>
    This file was generated by Sitefinity CLI v1.1.0.21
</auto-generated>
------------------------------------------------------------------------------ */

using MoreLinq;
using Newtonsoft.Json;
using SitefinityWebApp.Mvc.Models;
using SitefinityWebApp.Mvc.Models.Utils;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web.Mvc;
using Telerik.Sitefinity;
using Telerik.Sitefinity.DynamicModules;
using Telerik.Sitefinity.DynamicModules.Model;
using Telerik.Sitefinity.Libraries.Model;
using Telerik.Sitefinity.Model;
using Telerik.Sitefinity.Modules.Libraries;
using Telerik.Sitefinity.Mvc;
using Telerik.Sitefinity.Personalization;
using Telerik.Sitefinity.RelatedData;
using Telerik.Sitefinity.Utilities.TypeConverters;

namespace SitefinityWebApp.Mvc.Controllers
{
	[ControllerToolboxItem(Name = "Cotizador_MVC", Title = "Cotizador", SectionName = "CustomWidgets")]
	public class CotizadorController : Controller, IPersonalizable
	{
		// GET: Cotizador
		public ActionResult Index()
		{
    //        if (string.IsNullOrEmpty(this.MontoEnganche))
    //        {
				//this.MontoEnganche = "0";
    //        }

			var model = new CotizadorModel();
			model.MontoEnganche = this.MontoEnganche;
			model.autos = GetAllAutos();

			return View("Index", model);
		}
		
        protected override void HandleUnknownAction(string actionName)
        {
            this.ActionInvoker.InvokeAction(this.ControllerContext, "Index");
        }

		public int MontoEnganche { get; set; }

		public static IQueryable<MediaContent> GetImagesByImageLibrary(IFolder folder)
		{
			LibrariesManager librariesManager = LibrariesManager.GetManager();

			IQueryable<MediaContent> images = librariesManager.GetChildItems(folder);

			return images;
		}

		public List<AutoData> GetAllAutos()
		{
			var providerName = string.Empty;
			var transactionName = "getAllAutos";

			DynamicModuleManager dynamicModuleManager = DynamicModuleManager.GetManager(providerName, transactionName);
			Type autoType = TypeResolutionService.ResolveType("Telerik.Sitefinity.DynamicTypes.Model.Autos.Auto");

			var myCollection = dynamicModuleManager.GetDataItems(autoType).DistinctBy(x => x.UrlName.Value).ToList();

			List<AutoData> autos = new List<AutoData>();
            foreach (DynamicContent item in myCollection)
            {
				AutoData auto = new AutoData();
				auto.Name = item.GetValue("Title").ToString();
				auto.AutoId = int.Parse(item.GetValue("AutoId").ToString());

				var carPictureItem = item.GetRelatedItems("CarPicture").Cast<Image>().FirstOrDefault();
				if(carPictureItem != null)
                {
                    auto.CarImage = carPictureItem.GetValue("FilePath").ToString();
                }

				var modelPictureItem = item.GetRelatedItems("ModelPicture").Cast<Image>().FirstOrDefault();
				if (modelPictureItem != null)
				{
					auto.ModelImage = modelPictureItem.GetValue("FilePath").ToString();
				}

				var carAnimationItem = item.GetRelatedItems("CarAnimation").Cast<Image>().FirstOrDefault();
				if (carAnimationItem != null)
				{
					auto.CarAnimation = carAnimationItem.GetValue("FilePath").ToString();
				}

				autos.Add(auto);

			}
			// At this point myCollection contains the items from type autoType
			return autos;
		}
	}
}