@model SitefinityWebApp.Mvc.Models.InfoSelectDoubleModel

@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;

@Html.Script(ScriptRef.JQuery, "top", true)
@Html.Script(Url.WidgetContent("~/ResourcePackages/Bootstrap4/assets/dist/js/bootstrap.min.js"), "top", true)
@Html.Script(Url.WidgetContent("~/Content/scripts/InfoSelectDouble/info-select-double.js"), "bottom", true)
@Html.Script(Url.WidgetContent("~/Content/scripts/select2.min.js"), "top", true)

@Html.StyleSheet(Url.Content("~/Content/css/fonts.css"))
@Html.StyleSheet(Url.Content("~/Content/css/InfoSelectDouble/info-select-double.css"))
@Html.StyleSheet(Url.Content("~/Content/css/select2.min.css"))

<div class="is_double-container">
    <div class="is_double">
        <input type="hidden" value="@Model.LibraryId" id="library-id" />
        <input type="hidden" value="@Model.IsLibrary" id="is-library" />
        @if (Model.HasBackButton && !string.IsNullOrEmpty(Model.PageUrl))
        {
            <div class="d-flex mb-5">
                <a class="back-button" href="@Model.PageUrl">
                    <img src="/images/default-source/default-album/back_button.png" />
                </a>
            </div>
        }
        @if (!string.IsNullOrEmpty(Model.Heading))
        {
            <p class="is_double-title">@Html.HtmlSanitize(Model.Heading)</p>
        }
        else
        {
            <p class="is_double-title">Title</p>
        }
        @if (!string.IsNullOrEmpty(Model.Description))
        {
            <p class="is_double-parrafo">@Html.HtmlSanitize(Model.Description)</p>
        }
        else
        {
            <p class="is_double-parrafo">Description</p>
        }
        <div class="is_double-steps-container">
            <div id="step-one" class="is_double-step active-step">1</div>
            <span class="is_double-step-line"><span id="step-line" class="is_double-red-line"></span></span>
            <div id="step-two" class="is_double-step">2</div>
        </div>
        <div>
            <div class="row">
                <div class="col-12 col-md-6 mb-5 mb-md-0">
                    <div class="position-relative">
                        <select id="select-one" class="form-control">
                            @if (!string.IsNullOrEmpty(Model.SelectOnePlaceholder))
                            {
                                <option selected value="0" disabled>@Html.HtmlSanitize(Model.SelectOnePlaceholder)</option>
                            }
                            else
                            {
                                <option selected value="0" disabled>Elija una opci&oacute;n</option>
                            }

                            @if (Model.Folders != null && Model.Folders.Count > 0)
                            {
                                foreach (var folder in Model.Folders)
                                {
                                    <option id="@folder.Id" value="@folder.Id">@folder.Title.Value</option>
                                }
                            }
                        </select>
                        <span class="focus-border"></span>
                    </div>
                </div>
                <div class="col-12 col-md-6 mb-5 mb-md-0">
                    <div class="position-relative">
                        <select id="select-two" class="form-control" disabled>
                            @if (!string.IsNullOrEmpty(Model.SelectTwoPlaceholder))
                            {
                                <option selected value="0" disabled>@Html.HtmlSanitize(Model.SelectTwoPlaceholder)</option>
                            }
                            else
                            {
                                <option selected value="0" disabled>Elija una opci&oacute;n</option>
                            }
                        </select>
                        <span class="focus-border"></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>